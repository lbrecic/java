package hr.fer.oprpp1.custom.collections;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

public class ArrayIndexedCollectionTest {
	@Test
	public void testEmptyConstructor() {
		ArrayIndexedCollection arr = new ArrayIndexedCollection();
		assertEquals(16, arr.length());
	}
	
	@Test
	public void testInitialCapacityConstructor() {
		ArrayIndexedCollection arr = new ArrayIndexedCollection(100);
		assertEquals(100, arr.length());
	}
	
	@Test
	public void testInvalidInitialCapacityConstructorThrow() {
		assertThrows(IllegalArgumentException.class, () -> new ArrayIndexedCollection(-10));
	}
	
	@Test
	public void testCollectionCopyingConstructor() {
		ArrayIndexedCollection col1 = new ArrayIndexedCollection();
		col1.add("Zagreb");
		col1.add("Split");
		ArrayIndexedCollection col2 = new ArrayIndexedCollection(col1);
		assertEquals(col1.size(), col2.size());
	}
	
	@Test
	public void testCollectionAndCapacityConstructor() {
		ArrayIndexedCollection col1 = new ArrayIndexedCollection();
		col1.add("Zagreb");
		col1.add("Split");
		ArrayIndexedCollection col2 = new ArrayIndexedCollection(col1, 6);
		assertEquals(6, col2.length());
	}
	
	@Test
	public void testEmptyCollectionCopyingConstructorThrow() {
		assertThrows(NullPointerException.class, () -> new ArrayIndexedCollection(null));
	}
	
	@Test
	public void testAddNullElementThrows() {
		ArrayIndexedCollection arr = new ArrayIndexedCollection();
		assertThrows(NullPointerException.class, () -> arr.add(null));
	}
	
	@test
	public void testAdd() {
		ArrayIndexedCollection arr = new ArrayIndexedCollection();
		arr.add("Zagreb");
		arr.add("Split");
		assertEquals(2, arr.size());
	}
}
